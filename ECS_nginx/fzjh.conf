#-----------------------------------基本模块

# 使用的用户和组

user  nobody;

# 指定工作进程数

worker_processes  1;

# 可以使用 [ debug | info | notice | warn | error | crit ]  参数

#error_log  logs/error.log;

#error_log  logs/error.log  notice;

# 指定 pid 存放的路径

#pid        logs/nginx.pid;

#-----------------------------------事件模块

events {

#每个worker的最大连接数

    worker_connections  1024;

}

#-----------------------------------HTTP 模块

http {

#包含一个文件描述了：不同文件后缀对应的MIME，见案例分析

    include       mime.types;

#制定默认MIME类型为二进制字节流

    default_type  application/octet-stream;

#指令 access_log 指派路径、格式和缓存大小。

    #access_log  off;

#开启调用Linux的sendfile()，提供文件传输效率

    sendfile        on;

#是否允许使用socket的TCP_NOPUSH或TCP_CORK选项

    #tcp_nopush     on;

    #指定客户端连接保持活动的超时时间，在这个时间之后，服务器会关掉连接。

    keepalive_timeout  65;

#设置gzip，压缩文件

    #gzip  on;

#为后端服务器提供简单的负载均衡

upstream flask {

server 127.0.0.1:10000;

server 127.0.0.1:10001;

ip_hash;
}

#配置一台虚拟机

    server {

        listen       8012;

        server_name  localhost;

        location / {

proxy_pass http://flask;

        }
    }
}
